# A json schema definition of the data used to generate the envoy yaml file.
# See https://json-schema.org/

"$schema": "https://json-schema.org/draft-07/schema"

description: Input data for the mustache file generation.  The data is constructed in the script, but this file keeps the template reference easy.
type: object
required:
  - version
  - has_admin_port
  - listeners
  - has_clusters
  - clusters
properties:
  version:
    description: Version of this document's schema.  The value must be the string value "v1".
    const: "v1"

  network_name:
    description: Name of the network.  Generally, the Cloud Map Network Id.
    type: string

  service_member:
    description: Name of the service member.  Generally, the service name plus the color.
    type: string

  has_admin_port:
    description: >
      Set to True if the admin_port value is set.  If not set, then an
      appropriate placeholder must be used to allow later processing to replace
      the value.
    type: boolean

  admin_port:
    description: Envoy administration listening port.
    type: ["integer", "null"]

  listeners:
    description: list of mesh routing definitions
    type: array
    items:
      type: object
      required:
        - has_mesh_port
        - routes
      properties:
        has_mesh_port:
          description: >
            Set to True if the mesh_port value is set.  If not set, then an
            appropriate placeholder must be used to allow later processing to replace
            the value.  In the case of no mesh_port, there must be at most one
            listener with no mesh_port.
          type: boolean
        mesh_port:
          description: egress port that the service connects to for sending requests to other members of the mesh.
          type: ["integer", "null"]
        routes:
          description: List of routes and their weights.
          type: array
          items:
            type: object
            required:
              - route_path
              - path_is_prefix
              - path_is_exact
              - path_is_regex
              - path_is_case_sensitive
              - has_header_filters
              - header_filters
              - has_query_filters
              - query_filters
              - has_one_cluster
              - has_many_clusters
              - total_cluster_weight
              - clusters
            properties:
              route_path:
                description: Prefix path for this route.
                type: string
              path_is_prefix:
                description: >
                  route_path is a prefix.
                  Exactly one of path_is_prefix, path_is_exact, and path_is_regex must be true.
                type: boolean
              path_is_exact:
                description: >
                  route_path defines an exact path.
                  Exactly one of path_is_prefix, path_is_exact, and path_is_regex must be true.
                type: boolean
              path_is_regex:
                description: >
                  route_path defines a regular expression.
                  Exactly one of path_is_prefix, path_is_exact, and path_is_regex must be true.
                type: boolean
              path_is_case_sensitive:
                description: the route_path is case sensitive.
                type: boolean
              has_header_filters:
                description: Are there any header filters?
                type: boolean
              header_filters:
                description: filters traffic to the cluster based on header values.
                type: array
                items:
                  description:  filters traffic to the cluster based on a header value.
                  # Note: use 'method' header to route on the HTTP method.
                  type: object
                  required:
                    - name
                    - is_exact_match
                    - is_regex_match
                    - is_present_match
                    - is_suffix_match
                    - invert_match
                    - case_sensitive
                  properties:
                    name:
                      description: header name in the request.
                      type: string
                    match:
                      description: value to match on.
                      type: string
                    is_exact_match:
                      description: If specified, header match will be performed based on the value of the header.
                      type: boolean
                    is_regex_match:
                      description: >
                        If specified, this regex string is a regular expression rule which implies
                        the entire request header value must match the regex. The rule will not
                        match if only a subsequence of the request header value matches the regex.
                      type: boolean
                    is_present_match:
                      description: >
                        If specified, header match will be performed
                        based on whether the header is in the request.  The "match" property
                        will be ignored.
                      type: boolean
                    is_suffix_match:
                      description: >
                        If specified, header match will be performed based on the suffix of the header value.
                      type: boolean
                    invert_match:
                      description: If true, the match result will be inverted before checking. Defaults to false.
                      type: boolean
                    case_sensitive:
                      type: boolean
              has_query_filters:
                description: Are there any query parameter filters?
                type: boolean
              query_filters:
                description: filters traffic to the cluster based on query parameters.
                type: array
                items:
                  description: A query parameter filter
                  type: object
                  required:
                    - name
                    - is_exact_match
                    - is_regex_match
                    - is_present_match
                    - is_suffix_match
                    - invert_match
                    - case_sensitive
                  properties:
                    name:
                      description: header name in the request.
                      type: string
                    match:
                      description: value to match on.
                      type: string
                    is_exact_match:
                      description: If specified, header match will be performed based on the value of the header.
                      type: boolean
                    is_regex_match:
                      description: >
                        If specified, this regex string is a regular expression rule which implies
                        the entire request header value must match the regex. The rule will not
                        match if only a subsequence of the request header value matches the regex.
                      type: boolean
                    is_present_match:
                      description: >
                        If specified, header match will be performed
                        based on whether the header is in the request.  The "match" property
                        will be ignored.
                      type: boolean
                    is_suffix_match:
                      description: >
                        If specified, header match will be performed based on the suffix of the header value.
                      type: boolean
                    case_sensitive:
                      type: boolean
              has_one_cluster:
                description: Is there just one cluster?
                type: boolean
              has_many_clusters:
                description: Is there more than one cluster?
                type: boolean
              total_cluster_weight:
                description: sum of all of route's cluster's weights.
                type: integer
              clusters:
                description: list of clusters that handle this path prefix.
                type: array
                items:
                  type: object
                  required:
                    - cluster_name
                    - route_weight
                  properties:
                    cluster_name:
                      description: name of the cluster, in the cluster section.
                      type: string
                    route_weight:
                      description: this cluster's route's relative weight
                      type: integer

  has_clusters:
    description: are there 1 or more clusters?
    type: boolean
  clusters:
    description: list of each service/cluster routed to by the listeners.
    type: array
    items:
      type: object
      required:
        - name
        - uses_http2
        - endpoints
      properties:
        name:
          description: name of the service
          type: string
        uses_http2:
          description: uses HTTP2 for connections
          type: boolean
        endpoints:
          description: list of connection endpoints
          type: array
          items:
            type: object
            required:
              # TODO for now, we only support ipv4
              - ipv4
              - port
            properties:
              ipv4:
                description: IPv4 address of the instance.
                type: string
              port:
                description: endpoint listening port.  This is container's host port.
                type: integer
