# This file is inserted into the 01-templates.json file.
# It's also a static resources file, because the configuration
# doesn't change.

node:
  id: {{service_member}}
  cluster: {{network_name}}

{{#has_admin_port}}
admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      # Post mustache replacement.
      port_value: {{admin_port}}
{{/has_admin_port}}

static_resources:
  listeners:
{{#listeners}}
    - {{#has_mesh_port}}
      address:
        socket_address:
          address: "0.0.0.0"
          # Post-mustache replacement.
          port_value: {{mesh_port}}
      {{/has_mesh_port}}
      filter_chains:
      - filters:
        - name: envoy.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
            codec_type: auto
            stat_prefix: ingress_http
            http_filters:
            - name: envoy.router
              typed_config: {}
            route_config:
              name: local_route
              virtual_hosts:
              - name: backend
                domains:
                - "*"
                routes:
                # Static health check path, so something is always available when Envoy is up.
                - match:
                    path: /___health_check___
                  direct_response:
                    status: "200"
                    body:
                      inline_string: "ok"
                  response_headers_to_add:
                    - header:
                        key: "Content-type"
                        value: "text/plain"
                {{#routes}}
                - match:
                    {{#path_is_prefix}}
                    prefix: "{{route_path}}"
                    {{/path_is_prefix}}
                    {{#path_is_exact}}
                    path: "{{route_path}}"
                    {{/path_is_exact}}
                    {{#path_is_regex}}
                    safe_regex: "{{route_path}}"
                    {{/path_is_regex}}
                    {{#path_is_case_sensitive}}
                    case_sensitive: true
                    {{/path_is_case_sensitive}}
                    {{^path_is_case_sensitive}}
                    case_sensitive: false
                    {{/path_is_case_sensitive}}
                  {{#has_header_filters}}
                  headers:
                  {{#header_filters}}
                  - name: {{name}}
                    {{#is_exact_match}}
                    exact_match: {{match}}
                    {{/is_exact_match}}
                    {{#is_regex_match}}
                    safe_regex_match: {{match}}
                    {{/is_regex_match}}
                    {{#is_present_match}}
                    present_match: true
                    {{/is_present_match}}
                    {{#is_prefix_match}}
                    prefix_match: {{match}}
                    {{/is_prefix_match}}
                    {{#is_suffix_match}}
                    suffix_match: {{match}}
                    {{/is_suffix_match}}
                    {{#invert_match}}
                    invert_match: true
                    {{/invert_match}}
                  {{/header_filters}}
                  {{/has_header_filters}}
                  {{#has_query_filters}}
                  query_parameters:
                  {{#query_filters}}
                  - name: {{name}}
                    {{#is_present_match}}
                    present_match: true
                    {{/is_present_match}}
                    {{^is_present_match}}
                    string_match:
                      {{#is_exact_match}}
                      exact: {{match}}
                      {{/is_exact_match}}
                      {{#is_regex_match}}
                      safe_regex: {{match}}
                      {{/is_regex_match}}
                      {{#is_suffix_match}}
                      suffix: {{match}}
                      {{/is_suffix_match}}
                      {{#is_prefix_match}}
                      prefix: {{match}}
                      {{/is_prefix_match}}
                      {{^case_sensitive}}
                      ignore_case: true
                      {{/case_sensitive}}
                    {{/is_present_match}}
                  {{/query_filters}}
                  {{/has_query_filters}}
                  route:
                  {{#has_one_cluster}}
                    {{#clusters}}
                    cluster: {{cluster_name}}
                    {{/clusters}}
                  {{/has_one_cluster}}
                  {{#has_many_clusters}}
                    weighted_clusters:
                      total_weight: {{total_cluster_weight}}
                      clusters:
                      {{#clusters}}
                        - name: {{cluster_name}}
                          weight: {{route_weight}}
                      {{/clusters}}
                  {{/has_many_clusters}}
                {{/routes}}
{{/listeners}}
  clusters:
{{#clusters}}
    - name: {{name}}
      connect_timeout: 300s
      {{#hosts_are_ipv4}}
      type: static
      dns_lookup_family: V4_ONLY
      {{/hosts_are_ipv4}}
      {{#hosts_are_ipv6}}
      type: static
      dns_lookup_family: V6
      {{/hosts_are_ipv6}}
      {{#hosts_are_hostname}}
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      {{/hosts_are_hostname}}
      lb_policy: round_robin
      {{#uses_http2}}
      # Enabling http2_protocol_options means forcing connections to the cluster as http/2 requests.
      http2_protocol_options: {}
      {{/uses_http2}}
      load_assignment:
        cluster_name: {{name}}
        endpoints:
          - lb_endpoints:
            {{#endpoints}}
            - endpoint:
                address:
                  socket_address:
                    address: "{{host}}"
                    port_value: {{port}}
            {{/endpoints}}
{{/clusters}}
