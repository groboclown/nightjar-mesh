{
  "schema-version": "v1",
  "document-version": "2",
  "gateway-templates": [
    {
      "namespace": "default",
      "purpose": "envoy-config.yaml",
      "template": "node:\n  id: {{service_member}}\n  cluster: {{network_name}}\n\n{{#has_admin_port}}\nadmin:\n  access_log_path: \"/dev/stdout\"\n  address:\n    socket_address:\n      address: 0.0.0.0\n      # Post mustache replacement.\n      port_value: {{admin_port}}\n{{/has_admin_port}}\n\ndynamic_resources:\n  cds_config:\n    path: \"/tmp/envoy/cds.yaml\"\n  lds_config:\n    path: \"/tmp/envoy/lds.yaml\"\n"
    },
    {
      "namespace": "default",
      "purpose": "lds.yaml",
      "template": "version_info: \"0\"\nresources:\n{{#listeners}}\n- \"@type\": type.googleapis.com/envoy.api.v2.Listener\n  {{#has_mesh_port}}\n  address:\n    socket_address:\n      address: \"0.0.0.0\"\n      # Post-mustache replacement.\n      port_value: {{mesh_port}}\n  {{/has_mesh_port}}\n  filter_chains:\n  - filters:\n    - name: envoy.http_connection_manager\n      typed_config:\n        \"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n        codec_type: auto\n        stat_prefix: ingress_http\n        http_filters:\n        - name: envoy.router\n          typed_config: {}\n        route_config:\n          name: local_route\n          virtual_hosts:\n          - name: backend\n            domains:\n            - \"*\"\n            routes:\n            # Static health check path, so something is always available when Envoy is up.\n            - match:\n                path: /___health_check___\n              direct_response:\n                status: \"200\"\n                body:\n                  inline_string: \"ok\"\n              response_headers_to_add:\n                - header:\n                    key: \"Content-type\"\n                    value: \"text/plain\"\n            {{#routes}}\n            - match:\n                {{#path_is_prefix}}\n                prefix: \"{{route_path}}\"\n                {{/path_is_prefix}}\n                {{#path_is_exact}}\n                path: \"{{route_path}}\"\n                {{/path_is_exact}}\n                {{#path_is_regex}}\n                safe_regex: \"{{route_path}}\"\n                {{/path_is_regex}}\n                {{#path_is_case_sensitive}}\n                case_sensitive: true\n                {{/path_is_case_sensitive}}\n                {{^path_is_case_sensitive}}\n                case_sensitive: false\n                {{/path_is_case_sensitive}}\n              {{#has_header_filters}}\n              headers:\n              {{#header_filters}}\n              - name: {{name}}\n                {{#is_exact_match}}\n                exact_match: {{match}}\n                {{/is_exact_match}}\n                {{#is_regex_match}}\n                safe_regex_match: {{match}}\n                {{/is_regex_match}}\n                {{#is_present_match}}\n                present_match: true\n                {{/is_present_match}}\n                {{#is_prefix_match}}\n                prefix_match: {{match}}\n                {{/is_prefix_match}}\n                {{#is_suffix_match}}\n                suffix_match: {{match}}\n                {{/is_suffix_match}}\n                {{#invert_match}}\n                invert_match: true\n                {{/invert_match}}\n              {{/header_filters}}\n              {{/has_header_filters}}\n              {{#has_query_filters}}\n              query_parameters:\n              {{#query_filters}}\n              - name: {{name}}\n                {{#is_present_match}}\n                present_match: true\n                {{/is_present_match}}\n                {{^is_present_match}}\n                string_match:\n                  {{#is_exact_match}}\n                  exact: {{match}}\n                  {{/is_exact_match}}\n                  {{#is_regex_match}}\n                  safe_regex: {{match}}\n                  {{/is_regex_match}}\n                  {{#is_suffix_match}}\n                  suffix: {{match}}\n                  {{/is_suffix_match}}\n                  {{#is_prefix_match}}\n                  prefix: {{match}}\n                  {{/is_prefix_match}}\n                  {{^case_sensitive}}\n                  ignore_case: true\n                  {{/case_sensitive}}\n                {{/is_present_match}}\n              {{/query_filters}}\n              {{/has_query_filters}}\n              route:\n              {{#has_one_cluster}}\n                {{#clusters}}\n                cluster: {{cluster_name}}\n                {{/clusters}}\n              {{/has_one_cluster}}\n              {{#has_many_clusters}}\n                weighted_clusters:\n                  total_weight: {{total_cluster_weight}}\n                  clusters:\n                  {{#clusters}}\n                    - name: {{cluster_name}}\n                      weight: {{route_weight}}\n                  {{/clusters}}\n              {{/has_many_clusters}}\n            {{/routes}}\n{{/listeners}}\n"
    },
    {
      "namespace": "default",
      "purpose": "cds.yaml",
      "template": "version_info: \"0\"\nresources:\n{{#clusters}}\n- \"@type\": type.googleapis.com/envoy.api.v2.Cluster\n  name: {{name}}\n  connect_timeout: 300s\n  {{#hosts_are_ipv4}}\n  type: static\n  dns_lookup_family: V4_ONLY\n  {{/hosts_are_ipv4}}\n  {{#hosts_are_ipv6}}\n  type: static\n  dns_lookup_family: V6\n  {{/hosts_are_ipv6}}\n  {{#hosts_are_hostname}}\n  type: LOGICAL_DNS\n  dns_lookup_family: V4_ONLY\n  {{/hosts_are_hostname}}\n  lb_policy: round_robin\n  {{#uses_http2}}\n  # Enabling http2_protocol_options means forcing connections to the cluster as http/2 requests.\n  http2_protocol_options: {}\n  {{/uses_http2}}\n  load_assignment:\n    cluster_name: {{name}}\n    endpoints:\n      - lb_endpoints:\n        {{#endpoints}}\n        - endpoint:\n            address:\n              socket_address:\n                address: \"{{host}}\"\n                port_value: {{port}}\n        {{/endpoints}}\n{{/clusters}}\n"
    }
  ],
  "service-templates": []
}
